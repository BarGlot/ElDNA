/**-------------------------------------------------------------------------
 *
 * State1D.java
 *
 *
 *
 * Copyright (c) 2008-2009, Anatoly Sorokin, The University of Edinburgh
 *
 *  Author: Anatoly Sorokin <asorokin@inf.ed.ac.uk>
 *  Created on: Dec 17, 2009
 *	  $Id:$
 *-------------------------------------------------------------------------
 */

package ru.icb.promodel.edna.impl1d;

import interpolation.Spline;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import ru.icb.promodel.edna.IState;

/**
 * @author asorokin
 * 
 */
public class State1D implements IState {

	private static Map<String, Spline> templates;
	private static double[] x=new double[]{-105.000000,-104.000000,-103.000000,-102.000000,-101.000000,-100.000000,-99.000000,-98.000000,-97.000000,-96.000000,-95.000000,-94.000000,-93.000000,-92.000000,-91.000000,-90.000000,-89.000000,-88.000000,-87.000000,-86.000000,-85.000000,-84.000000,-83.000000,-82.000000,-81.000000,-80.000000,-79.000000,-78.000000,-77.000000,-76.000000,-75.000000,-74.000000,-73.000000,-72.000000,-71.000000,-70.000000,-69.000000,-68.000000,-67.000000,-66.000000,-65.000000,-64.000000,-63.000000,-62.000000,-61.000000,-60.000000,-59.000000,-58.000000,-57.000000,-56.000000,-55.000000,-54.000000,-53.000000,-52.000000,-51.000000,-50.000000,-49.000000,-48.000000,-47.000000,-46.000000,-45.000000,-44.000000,-43.000000,-42.000000,-41.000000,-40.000000,-39.000000,-38.000000,-37.000000,-36.000000,-35.000000,-34.000000,-33.000000,-32.000000,-31.000000,-30.000000,-29.000000,-28.000000,-27.000000,-26.000000,-25.000000,-24.000000,-23.000000,-22.000000,-21.000000,-20.000000,-19.000000,-18.000000,-17.000000,-16.000000,-15.000000,-14.000000,-13.000000,-12.000000,-11.000000,-10.000000,-9.000000,-8.000000,-7.000000,-6.000000,-5.000000,-4.000000,-3.000000,-2.000000,-1.000000,0.000000,1.000000,2.000000,3.000000,4.000000,5.000000,6.000000,7.000000,8.000000,9.000000,10.000000,11.000000,12.000000,13.000000,14.000000,15.000000,16.000000,17.000000,18.000000,19.000000,20.000000,21.000000,22.000000,23.000000,24.000000,25.000000,26.000000,27.000000,28.000000,29.000000,30.000000,31.000000,32.000000,33.000000,34.000000,35.000000,36.000000,37.000000,38.000000,39.000000,40.000000,41.000000,42.000000,43.000000,44.000000,45.000000,46.000000,47.000000,48.000000,49.000000,50.000000,51.000000,52.000000,53.000000,54.000000,55.000000,56.000000,57.000000,58.000000,59.000000,60.000000,61.000000,62.000000,63.000000,64.000000,65.000000,66.000000,67.000000,68.000000,69.000000,70.000000,71.000000,72.000000,73.000000,74.000000,75.000000,76.000000,77.000000,78.000000,79.000000,80.000000,81.000000,82.000000,83.000000,84.000000,85.000000,86.000000,87.000000,88.000000,89.000000,90.000000,91.000000,92.000000,93.000000,94.000000,95.000000,96.000000,97.000000,98.000000,99.000000,100.000000,101.000000,102.000000,103.000000,104.000000};
	private static double[] a=new double[]{0.000000,0.000000,0.000000,-0.006997,-0.002407,-0.013129,-0.013087,-0.024160,-0.023290,-0.034310,-0.029972,-0.039379,-0.040202,-0.041050,-0.041926,-0.042829,-0.043762,-0.044725,-0.045719,-0.046747,-0.047810,-0.048908,-0.050045,-0.051221,-0.052438,-0.053698,-0.055004,-0.056358,-0.057761,-0.059216,-0.060726,-0.062294,-0.063922,-0.065614,-0.067373,-0.069201,-0.071105,-0.073086,-0.075149,-0.077299,-0.079541,-0.081880,-0.084321,-0.086871,-0.089535,-0.092321,-0.095235,-0.098287,-0.101483,-0.104834,-0.108349,-0.112039,-0.115915,-0.119990,-0.124277,-0.128790,-0.133546,-0.138561,-0.143855,-0.149446,-0.155358,-0.161615,-0.168242,-0.175269,-0.182727,-0.190652,-0.199080,-0.208054,-0.217620,-0.227829,-0.238738,-0.250410,-0.262914,-0.276327,-0.290736,-0.306239,-0.322942,-0.340969,-0.360457,-0.381561,-0.404458,-0.429350,-0.456467,-0.486074,-0.518476,-0.554029,-0.593151,-0.636329,-0.684145,-0.737294,-0.796614,-0.863125,-0.938078,-1.023017,-1.119846,-1.230894,-1.358910,-1.506865,-1.677212,-1.869995,-2.079101,-2.287638,-2.468419,-2.597018,-2.667607,-2.689167,-2.667602,-2.597043,-2.468529,-2.287888,-2.079530,-1.870616,-1.678015,-1.507824,-1.359989,-1.232054,-1.121052,-1.024237,-0.939288,-0.864304,-0.797750,-0.738377,-0.685170,-0.637294,-0.594054,-0.554873,-0.519262,-0.486804,-0.457145,-0.429980,-0.405042,-0.382103,-0.360959,-0.341436,-0.323375,-0.306641,-0.291111,-0.276676,-0.263239,-0.250713,-0.239021,-0.228094,-0.217867,-0.208285,-0.199297,-0.190855,-0.182919,-0.175449,-0.168412,-0.161774,-0.155509,-0.149588,-0.143989,-0.138688,-0.133666,-0.128904,-0.124385,-0.120092,-0.116012,-0.112131,-0.108437,-0.104918,-0.101563,-0.098362,-0.095308,-0.092390,-0.089601,-0.086934,-0.084381,-0.081937,-0.079596,-0.077352,-0.075200,-0.073134,-0.071151,-0.069246,-0.067415,-0.065655,-0.063962,-0.062332,-0.060763,-0.059251,-0.057795,-0.056390,-0.055036,-0.053729,-0.052467,-0.051249,-0.050072,-0.048935,-0.047835,-0.046772,-0.045743,-0.044748,-0.043784,-0.042851,-0.041947,-0.041070,-0.040221,-0.039398,-0.029991,-0.034328,-0.023307,-0.025679,-0.011274,-0.012936,-0.002407,-0.006997,0.000000,0.000000};
	private static double[] t=new double[]{0.000000,0.000000,0.000000,-0.006997,-0.002407,-0.012936,-0.011274,-0.025679,-0.023307,-0.034328,-0.029991,-0.039398,-0.040221,-0.041070,-0.041947,-0.042851,-0.043784,-0.044748,-0.045743,-0.046772,-0.047835,-0.048935,-0.050072,-0.051249,-0.052467,-0.053729,-0.055036,-0.056390,-0.057795,-0.059251,-0.060763,-0.062332,-0.063962,-0.065655,-0.067415,-0.069246,-0.071151,-0.073134,-0.075200,-0.077352,-0.079596,-0.081937,-0.084381,-0.086934,-0.089601,-0.092390,-0.095308,-0.098362,-0.101563,-0.104918,-0.108437,-0.112131,-0.116012,-0.120092,-0.124385,-0.128904,-0.133666,-0.138688,-0.143989,-0.149588,-0.155509,-0.161774,-0.168412,-0.175449,-0.182919,-0.190855,-0.199297,-0.208285,-0.217867,-0.228094,-0.239021,-0.250713,-0.263239,-0.276676,-0.291111,-0.306641,-0.323375,-0.341436,-0.360959,-0.382103,-0.405042,-0.429980,-0.457145,-0.486804,-0.519262,-0.554873,-0.594054,-0.637294,-0.685170,-0.738377,-0.797750,-0.864304,-0.939288,-1.024237,-1.121052,-1.232054,-1.359989,-1.507824,-1.678015,-1.870616,-2.079530,-2.287888,-2.468529,-2.597043,-2.667602,-2.689167,-2.667607,-2.597018,-2.468419,-2.287638,-2.079101,-1.869995,-1.677212,-1.506865,-1.358910,-1.230894,-1.119846,-1.023017,-0.938078,-0.863125,-0.796614,-0.737294,-0.684145,-0.636329,-0.593151,-0.554029,-0.518476,-0.486074,-0.456467,-0.429350,-0.404458,-0.381561,-0.360457,-0.340969,-0.322942,-0.306239,-0.290736,-0.276327,-0.262914,-0.250410,-0.238738,-0.227829,-0.217620,-0.208054,-0.199080,-0.190652,-0.182727,-0.175269,-0.168242,-0.161615,-0.155358,-0.149446,-0.143855,-0.138561,-0.133546,-0.128790,-0.124277,-0.119990,-0.115915,-0.112039,-0.108349,-0.104834,-0.101483,-0.098287,-0.095235,-0.092321,-0.089535,-0.086871,-0.084321,-0.081880,-0.079541,-0.077299,-0.075149,-0.073086,-0.071105,-0.069201,-0.067373,-0.065614,-0.063922,-0.062294,-0.060726,-0.059216,-0.057761,-0.056358,-0.055004,-0.053698,-0.052438,-0.051221,-0.050045,-0.048908,-0.047810,-0.046747,-0.045719,-0.044725,-0.043762,-0.042829,-0.041926,-0.041050,-0.040202,-0.039379,-0.029972,-0.034310,-0.023290,-0.024160,-0.013087,-0.013129,-0.002407,-0.006997,0.000000,0.000000};
	private static double[] g=new double[]{0.000000,0.000000,0.000000,-0.006997,-0.002407,-0.013129,-0.027568,-0.030434,-0.023589,-0.034618,-0.030290,-0.039706,-0.040540,-0.041399,-0.042286,-0.043201,-0.044146,-0.045122,-0.046130,-0.047172,-0.048249,-0.049363,-0.050515,-0.051708,-0.052943,-0.054222,-0.055547,-0.056921,-0.058345,-0.059823,-0.061357,-0.062949,-0.064603,-0.066322,-0.068110,-0.069969,-0.071904,-0.073919,-0.076018,-0.078206,-0.080488,-0.082869,-0.085355,-0.087952,-0.090667,-0.093506,-0.096477,-0.099589,-0.102850,-0.106269,-0.109857,-0.113625,-0.117584,-0.121748,-0.126129,-0.130744,-0.135609,-0.140741,-0.146160,-0.151886,-0.157943,-0.164356,-0.171151,-0.178360,-0.186014,-0.194151,-0.202808,-0.212031,-0.221867,-0.232370,-0.243597,-0.255615,-0.268495,-0.282319,-0.297175,-0.313165,-0.330400,-0.349007,-0.369127,-0.390921,-0.414569,-0.440277,-0.468279,-0.498845,-0.532281,-0.568944,-0.609246,-0.653672,-0.702790,-0.757274,-0.817932,-0.885740,-0.961886,-1.047830,-1.145369,-1.256693,-1.384390,-1.531245,-1.699526,-1.889110,-2.093784,-2.296662,-2.470720,-2.591862,-2.654746,-2.668919,-2.640826,-2.565017,-2.432748,-2.249864,-2.040627,-1.831951,-1.640429,-1.471896,-1.326077,-1.200343,-1.091601,-0.997021,-0.914223,-0.841275,-0.776621,-0.719008,-0.667418,-0.621022,-0.579133,-0.541182,-0.506688,-0.475245,-0.446508,-0.420179,-0.396001,-0.373752,-0.353237,-0.334284,-0.316745,-0.300486,-0.285389,-0.271350,-0.258275,-0.246082,-0.234695,-0.224047,-0.214078,-0.204734,-0.195964,-0.187724,-0.179974,-0.172676,-0.165799,-0.159309,-0.153181,-0.147389,-0.141908,-0.136718,-0.131799,-0.127133,-0.122704,-0.118496,-0.114495,-0.110687,-0.107062,-0.103608,-0.100314,-0.097171,-0.094170,-0.091303,-0.088562,-0.085940,-0.083430,-0.081027,-0.078723,-0.076515,-0.074397,-0.072364,-0.070411,-0.068535,-0.066732,-0.064998,-0.063330,-0.061724,-0.060177,-0.058687,-0.057251,-0.055866,-0.054530,-0.053240,-0.051995,-0.050793,-0.049632,-0.048509,-0.047424,-0.046374,-0.045358,-0.044375,-0.043423,-0.042501,-0.041608,-0.040742,-0.039903,-0.039089,-0.029692,-0.034038,-0.023025,-0.023016,-0.006464,-0.012881,-0.002407,-0.006997,0.000000,0.000000};
	private static double[] c=new double[]{0.000000,0.000000,0.000000,-0.006997,-0.002407,-0.012881,-0.006464,-0.023016,-0.023025,-0.034038,-0.029692,-0.039089,-0.039903,-0.040742,-0.041608,-0.042501,-0.043423,-0.044375,-0.045358,-0.046374,-0.047424,-0.048509,-0.049632,-0.050793,-0.051995,-0.053240,-0.054530,-0.055866,-0.057251,-0.058687,-0.060177,-0.061724,-0.063330,-0.064998,-0.066732,-0.068535,-0.070411,-0.072364,-0.074397,-0.076515,-0.078723,-0.081027,-0.083430,-0.085940,-0.088562,-0.091303,-0.094170,-0.097171,-0.100314,-0.103608,-0.107062,-0.110687,-0.114495,-0.118496,-0.122704,-0.127133,-0.131799,-0.136718,-0.141908,-0.147389,-0.153181,-0.159309,-0.165799,-0.172676,-0.179974,-0.187724,-0.195964,-0.204734,-0.214078,-0.224047,-0.234695,-0.246082,-0.258275,-0.271350,-0.285389,-0.300486,-0.316745,-0.334284,-0.353237,-0.373752,-0.396001,-0.420179,-0.446508,-0.475245,-0.506688,-0.541182,-0.579133,-0.621022,-0.667418,-0.719008,-0.776621,-0.841275,-0.914223,-0.997021,-1.091601,-1.200343,-1.326077,-1.471896,-1.640429,-1.831951,-2.040627,-2.249864,-2.432748,-2.565017,-2.640826,-2.668919,-2.654746,-2.591862,-2.470720,-2.296662,-2.093784,-1.889110,-1.699526,-1.531245,-1.384390,-1.256693,-1.145369,-1.047830,-0.961886,-0.885740,-0.817932,-0.757274,-0.702790,-0.653672,-0.609246,-0.568944,-0.532281,-0.498845,-0.468279,-0.440277,-0.414569,-0.390921,-0.369127,-0.349007,-0.330400,-0.313165,-0.297175,-0.282319,-0.268495,-0.255615,-0.243597,-0.232370,-0.221867,-0.212031,-0.202808,-0.194151,-0.186014,-0.178360,-0.171151,-0.164356,-0.157943,-0.151886,-0.146160,-0.140741,-0.135609,-0.130744,-0.126129,-0.121748,-0.117584,-0.113625,-0.109857,-0.106269,-0.102850,-0.099589,-0.096477,-0.093506,-0.090667,-0.087952,-0.085355,-0.082869,-0.080488,-0.078206,-0.076018,-0.073919,-0.071904,-0.069969,-0.068110,-0.066322,-0.064603,-0.062949,-0.061357,-0.059823,-0.058345,-0.056921,-0.055547,-0.054222,-0.052943,-0.051708,-0.050515,-0.049363,-0.048249,-0.047172,-0.046130,-0.045122,-0.044146,-0.043201,-0.042286,-0.041399,-0.040540,-0.039706,-0.030290,-0.034618,-0.023589,-0.030434,-0.027568,-0.013129,-0.002407,-0.006997,0.000000,0.000000};
	private static int width=210;
	private static int start =-105;
	public static Map<String, IState> getIStates(){
		Map<String, IState> res=new HashMap<String, IState>();
		res.put("A", new State1D("A"));
		res.put("T", new State1D("T"));
		res.put("G", new State1D("G"));
		res.put("C", new State1D("C"));
		return res;
	}
	static{
		templates=new HashMap<String, Spline>();
		Spline s=new Spline(x, a);
		templates.put("A", s);
		s=new Spline(x, t);
		templates.put("T", s);
		s=new Spline(x, g);
		templates.put("G", s);
		s=new Spline(x, c);
		templates.put("C", s);
	}
	
	private String name;
	private double position;

	private State1D(String name) {
		this.name = name;
	}

	public State1D(IState s) {
		this(s.getName());
	}

	public String getName() {
		return name;
	}

	public double getPosition() {
		return position;
	}

	public double[] getTemplate() {
		double ttt[];
		if(name.equals("A")){
			ttt=a;
		}else if(name.equals("T")){
			ttt=t;
		}else if(name.equals("G")){
			ttt=g;
		}else if(name.equals("C")){
			ttt=c;
		}else{
			ttt=null;
		}
		return t;
	}

	public int getWidth() {
		return width;
	}

	public void setPosition(double z) {
		position=z;
	}

	public void updateProfile(List<Double> p, List<Integer> z) {
//		int right=width+start;
//		int l=p.size();
		double fl_pos = Math.floor(position);
		double frac=fl_pos-position;
		int init=(int)fl_pos + start;
		Spline s = templates.get(name);
		int st=(z.size()>0) ? (init-z.get(0)) : 0;
		for(int i=0;i<width;i++){
			
			double cp=s.spline_value(start+i+frac);;
			if((i+st)>=p.size()) {
				z.add(init);
				p.add(cp);
			}else{
				cp+=p.get(i+st);
				p.set(i+st, cp);
			}
			init++;
		}
//		for(int i=(int)(p.size()-fl_pos);i<width;i++){
//			z.add(init);
//			double cp=s.spline_value(start+i+frac);
//			p.add(cp);
//			init++;
//		}
	}

}
